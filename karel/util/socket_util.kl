ROUTINE CONNECT_TO_SERVER(connection_tag : STRING; socket_file: FILE)
BEGIN
	MSG_CONNECT(connection_tag, STATUS)
	catchError('Connecting to Server', STATUS)

	OPEN FILE socket_file('RW', connection_tag)
	STATUS = IO_STATUS(socket_file)
	catchError('Could not open socket file', STATUS)
	
END CONNECT_TO_SERVER

ROUTINE DISCONNECT_FROM_SERVER(connection_tag : STRING; socket_file: FILE)
BEGIN
	CLOSE FILE socket_file --close file first, otherwise msg_disco will abort
	MSG_DISCO(connection_tag, STATUS) -- can fail if no current connection, don't catch error
	
END DISCONNECT_FROM_SERVER


ROUTINE AWAIT_SOCKET(socket_file: FILE; pollrate: INTEGER)
VAR
n_bytes: INTEGER

BEGIN
REPEAT
	BYTES_AHEAD(socket_file, n_bytes, STATUS)
	catchError('Failed to scan socket', STATUS)
	DELAY pollrate -- sleep for x  ms
UNTIL n_bytes > 0

END AWAIT_SOCKET
