PROGRAM xml_client

	%INCLUDE klerxmlf

TYPE
	-- define struct that will be parsed from xml
	struct_t = STRUCTURE
	int_val: INTEGER
	float_val: REAL
	string_val: STRING[32]
	ENDSTRUCTURE

CONST
	-- mandatory global declarations
	PROGRAM_NAME = 'xml_client'

VAR
	-- mandatory global declarations
	LOG: FILE
	STATUS: INTEGER

	socketFile: FILE
	pipeFile: FILE
	structs: ARRAY [16] OF struct_t
	i: INTEGER
	n: INTEGER

%INCLUDE varlist_parser

%INCLUDE ../util/log_util
%INCLUDE ../util/socket_util
%INCLUDE ../util/file_util

BEGIN
log('Client BEGIN')
initLOG('MC:log.txt')

connectToServer('C3:', socketFile)
-- socketFile is now initialized & opened
log('Connection established')

WRITE socketFile('Karel says hello', CR, CR)

OPEN FILE pipeFile('RW', 'PIP:pipe.dt')
STATUS = IO_STATUS(pipeFile)
catchError('Could not open pipe file', STATUS)

awaitSocket(socketFile, 100) -- check every 100ms
log('Received socket message')

fileCopy(socketFile, pipeFile) -- socket -> pipe

CLOSE FILE pipeFile -- needs to be reopened (as RO) to be interpreted as xml
n = parse_varlist(pipeFile)

FOR i = 1 TO n DO
	log('Struct '+i)
	log('	int_val:'+ structs[i].int_val)
	log('	float_val:'+ structs[i].float_val)
	log('	string_val:'+ structs[i].string_val)
ENDFOR


CLOSE FILE socketFile
log('Client END')
END xml_client
